<!DOCTYPE html>
<html lang="en">
<%- include('../common/header'); %>



    <body class="sidebar-mini fixed">

        <div class="wrapper">
            <%- include('../common/nav'); %>
                <!-- Side-Nav-->
                <%- include('../common/side_nav'); %>
                    <div class="content-wrapper">
                        <div class="container-fluid">
                            <div class="header">
                                <h1>Reports > Sales Report</h1>
                                <br>
                            </div>
    
                            <!-- Filters -->
                            <form id="reportForm">
                                <div class="filters">
                                    <div class="date-range">
                                        <label for="dateRange">Date Range</label>
                                        <div class="input-daterange input-group" id="datepicker">
                                            <input type="date" class="input-sm form-control" name="startDate"
                                                value="<%= filters.startDate %>" />
                                            <span class="input-group-addon">to</span>
                                            <input type="date" class="input-sm form-control" name="endDate"
                                                value="<%= filters.endDate %>" />
                                        </div>
                                    </div>
    
    
    
                                    <button class="btn-primary active" type="submit">Apply Filters</button>
                                    <button class="btn-success active" type="button" id="downloadBtn">Download
                                        Report</button>
                                </div>
                            </form>
    
    
                            <!-- Loading Indicator -->
    
    
                            <!-- Sales Chart -->
    
    
    
    
                            <div class="row">
                                <div class="col-sm-12">
                                    <div id="barchart" style="width: 100%; height: 400px;"></div>
                                </div>
    
                                <div class="col-sm-12">
                                    <!-- Basic Table starts -->
                                    <div class="card">
                                        <div class="card-header">
                                            <h5 class="card-header-text">Order List</h5>
                                            <!-- <p>Basic example <code>without any additional modification</code> classes</p> -->
    
                                        </div>
                                        <div class="card-block">
                                            <div class="row">
                                                <div class="col-sm-12 table-responsive">
                                                    <table class="table">
                                                        <thead>
                                                            <tr>
                                                                <th>Order ID</th>
                                                                <th>Date & Time</th>
                                                                <th>Total</th>
                                                                <th>Customer Name</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <% sales.forEach(sale=> { %>
                                                                <tr>
                                                                    <td>
                                                                        <%= sale.orderId %>
                                                                    </td>
                                                                    <td>
                                                                        <%= new Date(sale.dateTime).toLocaleString() %>
                                                                    </td>
                                                                    <td>
                                                                        <%= sale.total %>
                                                                    </td>
                                                                    <td>
                                                                        <%= sale.customerName %>
                                                                    </td>
    

                                                                </tr>
                                                                <% }) %>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Basic Table ends -->
    
                                </div>
                            </div>
                        </div>
                    </div>

        </div>

        <script src="https://code.highcharts.com/highcharts.js"></script>
        <script>

            // Initialize chart
            const salesData = JSON.parse('<%- JSON.stringify(salesData) %>');
            // Prepare the data for Highcharts

            const salesCategories = Object.keys(salesData).map(date => {
                const d = new Date(date);
                return d.toLocaleDateString('en-GB', {
                    day: 'numeric',
                    month: 'short',
                    year: 'numeric' // Adjust as needed
                });
            });

            const salesValues = Object.values(salesData);

            // Create the Highcharts chart
            Highcharts.chart('barchart', {
                title: {
                    text: 'Sales Data Over Time' // Title for the chart
                },
                xAxis: {
                    categories: salesCategories,
                    title: {
                        text: 'Date' // Title for x-axis
                    }
                },
                yAxis: {
                    title: {
                        text: 'Total Sales' // Title for y-axis
                    },
                    min: 0 // Start the y-axis at 0
                },
                series: [{
                    type: 'column', // Column chart type
                    name: 'Sales',
                    data: salesValues,
                    color: '#f57c00',
                    pointWidth: 20 // Color for the sales bars
                }, {
                    type: 'spline', // Spline chart for the average
                    name: 'Average',
                    data: salesValues.map(value => value / 10), // Adjust this calculation as needed for your average
                    marker: {
                        lineWidth: 2,
                        lineColor: Highcharts.getOptions().colors[3],
                        fillColor: 'white'
                    }
                }]
            });


            // Handle download
            document.getElementById('downloadBtn').addEventListener('click', async function () {
                const loading = document.getElementById('loading');
                const form = document.getElementById('reportForm');
                const formData = new FormData(form);
                const queryString = new URLSearchParams(formData).toString();

                try {
                    loading.classList.add('active');

                    const response = await fetch(`/api/sales/reports/sales/download?${queryString}`, {
                        method: 'GET',
                        headers: {
                            'Accept': 'text/csv'
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Download failed');
                    }

                    // Get the CSV content
                    const csvContent = await response.text();

                    // Create blob and download
                    const blob = new Blob([csvContent], { type: 'text/csv' });
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.style.display = 'none';
                    a.href = url;
                    a.download = 'sales_report.csv';

                    document.body.appendChild(a);
                    a.click();

                    // Cleanup
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                } catch (error) {
                    console.error('Download error:', error);
                    alert('Failed to download report. Please try again.');
                } finally {
                    loading.classList.remove('active');
                }
            });

            // Handle form submission for filtering
            document.getElementById('reportForm').addEventListener('submit', function (event) {
                event.preventDefault();
                const form = event.target;
                const queryString = new URLSearchParams(new FormData(form)).toString();
                window.location.href = `/api/sales/reports/sales?${queryString}`;
            });

        </script>

        <%- include('../common/script'); %>
    </body>

</html>